movies <- for(movie in movies) {
ifelse("Action" %in% movies$Genre,
movies$action_count + 1,
movies$action_count)
}
movies_by_genre <- movies %>%
separate(Genre, into = c("Genre1", "Genre2", "Genre3",
"Genre4", "Genre5", "Genre6",
"Genre7"),
sep = ",")
movies <- read_csv("movies.csv") #replace with file name
movies_by_genre %>%
filter(Original_Language == "en") %>% # replace with filter in shiny
select(Genre1, Genre2, genre_count) %>%
group_by(Genre1, Genre2) %>%
mutate(genre_count = n()) %>%
ungroup() %>%
movies_by_genre %>%
filter(Original_Language == "en") %>% # replace with filter in shiny
select(Genre1, Genre2, genre_count) %>%
group_by(Genre1, Genre2) %>%
mutate(genre_count = n()) %>%
ungroup()
View(movies)
View(movies_by_genre)
View(movies)
?str_detect
for(movie in movies) {
ifelse(str_detect(movies$Genre, "Action"),
movies$action_count + 1,
movies$action_count)
}
genres <- df()
?df
genres <- data.frame()
genres <- data.frame(action_count)
genres <- data.frame(action_count = c())
for(movie in movies) {
ifelse(str_detect(movies$Genre, "Action"),
genres$action_count + 1,
genres$action_count)
}
for(x in nrow(movies)) {
ifelse(str_detect(movies$Genre, "Action"),
genres$action_count + 1,
genres$action_count)
}
for(x in movies) {
ifelse(str_detect(movies$Genre, "Action"),
genres$action_count + 1,
genres$action_count)
}
print(x)
for(x in movies$Genre) {
print(x)
}
ifelse(str_detect(x, "Action"),
genres$action_count + 1,
genres$action_count)
for(x in movies$Genre) {
ifelse(str_detect(x, "Action"),
genres$action_count + 1,
genres$action_count)
}
for(x in movies$Genre) {
ifelse(str_detect(x, "Action"),
print(x),
print("nothing"))
}
for(x in movies$Genre) {
ifelse(str_detect(x, "Action"),
action_count + 1,
action_count + 0))
ifelse(str_detect(x, "Action"),
action_count + 1,
action_count + 0))
ifelse(str_detect(x, "Action"),
action_count + 1,
action_count + 0))
for(x in movies$Genre) {
ifelse(str_detect(x, "Action"),
action_count + 1,
action_count + 0)
}
# genres <- data.frame(action_count = c())
action_count = 0
ifelse(str_detect(x, "Action"),
action_count + 1,
action_count + 0)
action_count = 0
for(x in movies$Genre) {
ifelse(str_detect(x, "Action"),
action_count + 1,
action_count + 0)
}
action_count
action_count = 0
for(x in movies$Genre) {
ifelse(str_detect(x, "Action"),
action_count + 1,
action_count + 0)
}
action_count
ifelse(str_detect(x, "Action"),
action_count = action_count + 1,
action_count = action_count + 0)
action_count = 0
for(x in movies$Genre) {
ifelse(str_detect(x, "Action"),
action_count = action_count + 1,
action_count = action_count + 0)
}
action_count <- 0
for(x in movies$Genre) {
ifelse(str_detect(x, "Action"),
action_count <- action_count + 1,
action_count <- action_count + 0)
}
action_count
genres <- data.frame(action_count = c())
# action_count <- 0
for(x in movies$Genre) {
ifelse(str_detect(x, "Action"),
action_count <- action_count + 1,
action_count <- action_count + 0)
}
action_count
genres <- data.frame(action_count = c())
# action_count <- 0
for(x in movies$Genre) {
ifelse(str_detect(x, "Action"),
action_count <- action_count + 1,
action_count <- action_count + 0)
}
action_count
action_count <- 0
genres <- data.frame(action_count = c())
for(x in movies$Genre) {
ifelse(str_detect(x, "Action"),
action_count <- action_count + 1,
action_count <- action_count + 0)
}
genres
genres <- data.frame(action_count = c())
for(x in movies$Genre) {
ifelse(str_detect(x, "Action"),
genres$action_count <- genres$action_count + 1,
genres$action_count <- genres$action_count + 0)
}
genres
action_count <- 0
for(x in movies$Genre) {
ifelse(str_detect(x, "Action"),
action_count <- action_count + 1,
action_count <- action_count + 0)
}
action_count <- 0
for(x in movies$Genre) {
ifelse(str_detect(x, "Action"),
action_count <- action_count + 1,
action_count <- action_count + 0)
}
action_count
action_count <- 0
for(x in movies$Genre) {
ifelse(str_detect(x, "Action"),
action_count <- action_count + 1,
action_count <- action_count + 0)
}
action_count
genres
genres <- data.frame(c(action_count))
genres
genres <- data.frame(c(action_count = action_count))
genres
library(tidyverse)
library(ggplot2)
movies <- read_csv("mymoviedb.csv") #replace with file name
movies_by_genre <- movies %>%
separate(Genre, into = c("Genre1", "Genre2", "Genre3",
"Genre4", "Genre5", "Genre6",
"Genre7"),
sep = ",")
# for(x in movies$Genre) {
for(gen in 1:nrow(genre_df)) {
row <- genre_df[gen,]
print(row)
# ifelse(str_detect(x, row$genre_name),
#        print(genre_df$genre_name), print("not found"))
# genre_df$genre_count[gen, ] <- genre_df$genre_count[gen, ] + 1,
# genre_df$genre_count[gen, ] <- genre_df$genre_count[gen, ] + 0)
}
genre_list <- movies_by_genre$Genre1 %>%
unique()
genre_df <- data.frame(genre_name = genre_list)
genre_df$genre_count <- replicate(nrow(genre_df), 0)
# action_count <- 0
# adventure_count <- 0
# comedy_count <- 0
# for(x in movies$Genre) {
for(gen in 1:nrow(genre_df)) {
row <- genre_df[gen,]
print(row)
# ifelse(str_detect(x, row$genre_name),
#        print(genre_df$genre_name), print("not found"))
# genre_df$genre_count[gen, ] <- genre_df$genre_count[gen, ] + 1,
# genre_df$genre_count[gen, ] <- genre_df$genre_count[gen, ] + 0)
}
# ifelse(str_detect(x, "Action"),
#     action_count <- action_count + 1,
#     action_count <- action_count + 0)
# ifelse(str_detect(x, "Adventure"),
#     adventure_count <- adventure_count + 1,
#     adventure_count <- adventure_count + 0)
# }
genre_df
# genres <- data.frame(action_count, adventure_count)
# genres
for(x in movies$Genre) {
for(gen in 1:nrow(genre_df)) {
row <- genre_df[gen,]
ifelse(str_detect(x, row$genre_name),
row$genre_count <- row$genre_count + 1,
row$genre_count <- row$genre_count + 0)
}
# ifelse(str_detect(x, "Action"),
#     action_count <- action_count + 1,
#     action_count <- action_count + 0)
# ifelse(str_detect(x, "Adventure"),
#     adventure_count <- adventure_count + 1,
#     adventure_count <- adventure_count + 0)
}
genre_df
genre_list <- movies_by_genre$Genre1 %>%
unique()
genre_df <- data.frame(genre_name = genre_list)
genre_df$genre_count <- replicate(nrow(genre_df), 0)
# action_count <- 0
# adventure_count <- 0
# comedy_count <- 0
for(x in movies$Genre) {
for(gen in 1:nrow(genre_df)) {
row <- genre_df[gen,]
ifelse(str_detect(x, row$genre_name),
row$genre_count <- row$genre_count + 1,
row$genre_count <- row$genre_count + 0)
genre_df[gen, ] <- row
}
# ifelse(str_detect(x, "Action"),
#     action_count <- action_count + 1,
#     action_count <- action_count + 0)
# ifelse(str_detect(x, "Adventure"),
#     adventure_count <- adventure_count + 1,
#     adventure_count <- adventure_count + 0)
}
genre_df
# genres <- data.frame(action_count, adventure_count)
# genres
movies_by_genre <- movies %>%
separate(Genre, into = c("Genre1", "Genre2", "Genre3",
"Genre4", "Genre5", "Genre6",
"Genre7"),
sep = ",")
View(movies)
library(tidyverse)
library(ggplot2)
movies <- read_csv("mymoviedb.csv") #replace with file name
movies_by_genre <- movies %>%
separate(Genre, into = c("Genre1", "Genre2", "Genre3",
"Genre4", "Genre5", "Genre6",
"Genre7"),
sep = ",")
genre_list <- movies_by_genre$Genre1 %>%
unique()
genre_df <- data.frame(genre_name = genre_list)
genre_df$genre_count <- replicate(nrow(genre_df), 0)
for(x in movies$Genre) {
for(gen in 1:nrow(genre_df)) {
row <- genre_df[gen,]
ifelse(str_detect(x, row$genre_name),
row$genre_count <- row$genre_count + 1,
row$genre_count <- row$genre_count + 0)
genre_df[gen, ] <- row
}
}
genre_df
genre_list <- movies_by_genre$Genre1 %>%
unique()
genre_df <- data.frame(genre_name = genre_list)
genre_df$genre_count <- replicate(nrow(genre_df), 0)
movies_language <- movies %>%
filter(Original_Language == "en")
for(x in movies_language$Genre) {
for(gen in 1:nrow(genre_df)) {
row <- genre_df[gen,]
ifelse(str_detect(x, row$genre_name),
row$genre_count <- row$genre_count + 1,
row$genre_count <- row$genre_count + 0)
genre_df[gen, ] <- row
}
}
genre_df
genre_df %>%
ggplot(aes(x = genre_count, y = fct_reorder(genre_name, genre_count))) +
geom_col()
theme_set(theme_minimal)
genre_df %>%
ggplot(aes(x = genre_count, y = fct_reorder(genre_name, genre_count))) +
geom_col()
genre_df %>%
ggplot(aes(x = genre_count, y = fct_reorder(genre_name, genre_count))) +
geom_col() +
theme_minimal()
genre_df %>%
ggplot(aes(x = genre_count, y = fct_reorder(genre_name, genre_count))) +
geom_col() +
theme_minimal()
genre_df %>%
ggplot(aes(x = genre_count, y = fct_reorder(genre_name, genre_count))) +
geom_col()
library(tidyverse)
library(ggplot2)
genre_df %>%
ggplot(aes(x = genre_count, y = fct_reorder(genre_name, genre_count))) +
geom_col()
genre_df %>%
ggplot(aes(x = genre_count, y = fct_reorder(genre_name, genre_count))) +
geom_col()
library(tidyverse)
library(ggplot2)
movies <- read_csv("mymoviedb.csv") #replace with file name
movies_by_genre <- movies %>%
separate(Genre, into = c("Genre1", "Genre2", "Genre3",
"Genre4", "Genre5", "Genre6",
"Genre7"),
sep = ",")
genre_list <- movies_by_genre$Genre1 %>%
unique()
genre_df <- data.frame(genre_name = genre_list)
genre_df$genre_count <- replicate(nrow(genre_df), 0)
movies_language <- movies %>%
filter(Original_Language == "en") #replace with shiny app selector
for(x in movies_language$Genre) {
#can replace movies_language with movies for full count
for(gen in 1:nrow(genre_df)) {
row <- genre_df[gen,]
ifelse(str_detect(x, row$genre_name),
row$genre_count <- row$genre_count + 1,
row$genre_count <- row$genre_count + 0)
genre_df[gen, ] <- row
}
}
genre_df
genre_df %>%
ggplot(aes(x = genre_count, y = fct_reorder(genre_name, genre_count))) +
geom_col() +
labs(x = "Total Number of Movies", y = "",
title = "Number of Movies in Each Genre for Given Language")
theme_minimal()
genre_df %>%
ggplot(aes(x = genre_count, y = fct_reorder(genre_name, genre_count))) +
geom_col() +
labs(x = "Total Number of Movies", y = "",
title = "Number of Movies in Each Genre for Given Language") +
theme_minimal()
genre_df %>%
ggplot(aes(x = genre_count, y = fct_reorder(genre_name, genre_count))) +
geom_col() +
labs(x = "Total Number of Movies", y = "",
title = "Number of Movies in Each Genre for x Language") +
theme_minimal()
genre_df %>%
ggplot(aes(x = genre_count, y = fct_reorder(genre_name, genre_count))) +
geom_col() +
labs(x = "Total Number of Movies", y = "",
title = "Number of Movies in Each Genre for xxxx Language") +
theme_minimal()
movies %>%
arrange(desc(Popularity)) %>%
select(Title, Popularity) %>%
top_n(20) %>%
ggplot(aes(x = Popularity, y = fct_reorder(Title,Popularity))) +
geom_col()  +
ggtitle("Top 20 Movies by Popularity") +
ylab("")
movies %>%
arrange(desc(Popularity)) %>%
select(Title, Popularity) %>%
top_n(20) %>%
ggplot(aes(x = Popularity, y = fct_reorder(Title,Popularity))) +
geom_col()  +
ggtitle("Top 20 Movies by Popularity") +
ylab("") +
theme_minimal()
View(movies)
movies %>%
mutate(year = lubridate::year(Release_Date))
movies %>%
mutate(year = lubridate::year(Release_Date)) %>%
group_by(year) %>%
ggplot(aes(x = date, y = n())) +
geom_density()
movies %>%
mutate(year = lubridate::year(Release_Date)) %>%
group_by(year) %>%
mutate(count = n()) %>%
ungroup() %>%
ggplot(aes(x = date, y = count)) +
geom_density()
movies %>%
mutate(year = lubridate::year(Release_Date)) %>%
group_by(year) %>%
mutate(count = n()) %>%
ungroup() %>%
ggplot(aes(x = date, y = count)) +
geom_density()
movies %>%
mutate(year = lubridate::year(Release_Date)) %>%
group_by(year) %>%
mutate(count = n()) %>%
ggplot(aes(x = date, y = count)) +
geom_density()
movies %>%
mutate(year = lubridate::year(Release_Date)) %>%
group_by(year) %>%
mutate(count = n()) %>%
ungroup() %>%
ggplot(aes(x = Release_Date, y = count)) +
geom_density()
movies %>%
mutate(year = lubridate::year(Release_Date)) %>%
group_by(year) %>%
mutate(count = n()) %>%
ungroup() %>%
ggplot() +
geom_density(aes(x = Release_Date, y = count))
movies %>%
mutate(year = lubridate::year(Release_Date)) %>%
group_by(year) %>%
mutate(count = n()) %>%
ungroup() %>%
ggplot(aes(y = Release_Date)) +
geom_density()
movies %>%
mutate(year = lubridate::year(Release_Date)) %>%
group_by(year) %>%
mutate(count = n()) %>%
ungroup() %>%
ggplot(aes(y = Release_Date)) +
geom_density() +
coord_flip()
movies %>%
mutate(year = lubridate::year(Release_Date)) %>%
group_by(year) %>%
mutate(count = n()) %>%
ungroup() %>%
ggplot(aes(y = Release_Date)) +
geom_density() +
coord_flip() +
theme_minimal()
movies %>%
arrange(desc(Vote_Average)) %>%
select(Title, Vote_Average) %>%
top_n(20) %>%
ggplot(aes(x = Vote_Average, y = fct_reorder(Title,Vote_Average))) +
geom_col()  +
labs(x = "", y = "Average Rating",
title = "Top 20 Average Movie Ratings",
caption = "Ratings on a scale of 0-10, with higher values indicating better scores. Data based on consumer ratings from TMDB.") +
theme_minimal()
movies %>%
filter(Original_Language == "en") %>%
arrange(desc(Vote_Average)) %>%
select(Title, Vote_Average) %>%
top_n(20) %>%
ggplot(aes(x = Vote_Average, y = fct_reorder(Title,Vote_Average))) +
geom_col()  +
labs(x = "", y = "Average Rating",
title = "Top 20 Average Movie Ratings",
caption = "Ratings on a scale of 0-10, with higher values indicating better scores. Data based on consumer ratings from TMDB.") +
theme_minimal()
movies %>%
filter(Original_Language == "en") %>%
arrange(desc(Vote_Average)) %>%
select(Title, Vote_Average) %>%
top_n(20) %>%
ggplot(aes(x = Vote_Average, y = fct_reorder(Title,Vote_Average))) +
geom_col()  +
labs(x = "", y = "Average Rating",
title = "Top 20 Average Movie Ratings",
caption = "Ratings on a scale of 0-10, with higher values indicating better scores.\nData based on consumer ratings from TMDB.") +
theme_minimal()
movies %>%
filter(Original_Language == "en") %>%
arrange(desc(Vote_Average)) %>%
select(Title, Vote_Average) %>%
top_n(20) %>%
ggplot(aes(x = Vote_Average, y = fct_reorder(Title,Vote_Average))) +
geom_col()  +
labs(x = "Average Rating", y = ""
title = "Top 20 Average Movie Ratings",
movies %>%
filter(Original_Language == "en") %>%
arrange(desc(Vote_Average)) %>%
select(Title, Vote_Average) %>%
top_n(20) %>%
ggplot(aes(x = Vote_Average, y = fct_reorder(Title,Vote_Average))) +
geom_col()  +
labs(x = "Average Rating", y = "",
title = "Top 20 Average Movie Ratings",
caption = "Ratings on a scale of 0-10, with higher values indicating better scores.\nData based on consumer ratings from TMDB.") +
theme_minimal()
